<?xml version="1.0" encoding="utf-8" ?><transcript><text start="0.56" dur="4.16">when you&amp;#39;re learning to code do you ever feel 
like you&amp;#39;re stuck learning the same thing over  </text><text start="4.72" dur="5.2">and over again? you might watch a tutorial video 
and by the end you feel like you kind of get it  </text><text start="9.92" dur="5.12">but when the next day rolls around you&amp;#39;ve no clue 
how any of it works anymore so you have to go back  </text><text start="15.04" dur="5.92">and re-watch the tutorial but unfortunately this 
pattern keeps repeating you might feel like none  </text><text start="20.96" dur="4.24">of this knowledge is actually sticking in your 
brain and it can get very frustrating to feel  </text><text start="25.2" dur="4.32">like you&amp;#39;re not getting anywhere so in this 
video I&amp;#39;m going to cover some common pitfalls  </text><text start="29.52" dur="4.16">that might be tripping you up and causing you 
to waste time when you&amp;#39;re learning to code  </text><text start="34.24" dur="4.16">now as a disclaimer keep in mind that there 
are no magical shortcuts that will transform  </text><text start="38.4" dur="7.76">you overnight into a coding expert I know, even 
with good learning techniques it&amp;#39;s still going  </text><text start="46.16" dur="5.92">to take time to go from a beginner developer to a 
more advanced one alright let&amp;#39;s get into the tips  </text><text start="54.88" dur="5.68">the first one is don&amp;#39;t learn things randomly 
figure out a road map to follow if you&amp;#39;re jumping  </text><text start="60.56" dur="5.12">around trying to learn git one day CSS custom 
properties the next and javascript promises on  </text><text start="65.68" dur="5.2">the third you may be setting yourself up for a lot 
of hardship instead of picking things at random to  </text><text start="70.88" dur="4.88">learn look for a structured path that you can 
follow one path you can use is a video on my  </text><text start="75.76" dur="5.04">channel called learn web development for absolute 
beginners it shows you a simplified roadmap of  </text><text start="80.8" dur="5.6">the main skills that you&amp;#39;ll need to learn and the 
order to learn them in you can also go through an  </text><text start="86.4" dur="6.08">online bootcamp curriculum like FreeCodeCamp, Zero 
to Mastery or Ania Kubów&amp;#39;s 12 hour bootcamp on  </text><text start="92.48" dur="5.92">HTML, CSS and JavaScript. The benefit of following 
a pre-made path is that you&amp;#39;ll know what you need  </text><text start="98.4" dur="5.44">to learn and when and as you go from one step to 
the next you&amp;#39;ll be able to see your progress and  </text><text start="103.84" dur="4.64">feel like you&amp;#39;re actually getting somewhere now as 
you&amp;#39;re following your path you might be tempted to  </text><text start="108.48" dur="5.52">try to learn multiple things at the same time in 
order to get through everything more quickly but  </text><text start="114" dur="4.56">doing this may actually divide your attention 
and make it harder for that knowledge to stick  </text><text start="118.56" dur="5.68">so tip number two is don&amp;#39;t try to learn everything 
all at once but focus on learning one thing at a  </text><text start="124.24" dur="5.52">time I recommend staying on one subject until 
you feel you have a decent grasp of the basics  </text><text start="129.76" dur="5.12">at least when you&amp;#39;re starting out for example 
let&amp;#39;s say you&amp;#39;re learning html first once you  </text><text start="134.88" dur="5.28">feel like you know most of the common tags and can 
build a very basic html web page you can move on  </text><text start="140.16" dur="5.6">to learning CSS then in the future if you come 
across an html tag that you&amp;#39;re not familiar with  </text><text start="145.76" dur="6.4">you can take some time to learn about that 
specific tag tip number three be an active learner  </text><text start="152.16" dur="4.96">don&amp;#39;t just passively consume content sitting 
back and watching an instructor go through the  </text><text start="157.12" dur="5.84">material without trying anything yourself is not 
going to get you very far instead try to do some  </text><text start="162.96" dur="5.68">combination of taking a new information and then 
trying it yourself in real life for example I went  </text><text start="168.64" dur="5.04">through Wes Bos&amp;#39;s CSS grid course back when I was 
first learning about grid what I did was I would  </text><text start="173.68" dur="5.12">watch the video and try to code along with wes 
through the lessons if I didn&amp;#39;t fully understand  </text><text start="178.8" dur="4.96">something I would go back and watch it again and 
after each lesson I would pause the course and try  </text><text start="183.76" dur="5.92">to build the lesson examples on my own without 
looking back as much as possible this trying to  </text><text start="189.68" dur="4.56">create what you&amp;#39;ve just learned without looking at 
the source code is a great way to see how much you  </text><text start="194.24" dur="4.88">actually remember and it&amp;#39;ll very quickly help 
you identify the weak points in your knowledge  </text><text start="199.12" dur="5.04">so you can then go back and fill it in after the 
course was done I felt like I had a basic grasp  </text><text start="204.16" dur="5.84">of CSS grid but I wouldn&amp;#39;t consider myself an 
expert by any definition and I think that&amp;#39;s okay  </text><text start="210.56" dur="4.56">because I could try to use grid when building 
website layouts and if I ever got stuck on  </text><text start="215.12" dur="4.48">anything I could refer back to the course or 
other resources like Mozilla Developer Network  </text><text start="220.24" dur="4.48">learning new skills and coding is a combination 
of learning the knowledge and putting it into  </text><text start="224.72" dur="6.32">practice which brings me to tip number four don&amp;#39;t 
just memorize stuff remember back in school when  </text><text start="231.04" dur="4.72">you were learning vocabulary words and history 
dates you might have studied lists of facts and  </text><text start="235.76" dur="5.28">memorized them so that you could regurgitate 
them for tests and quizzes now I&amp;#39;m not here to  </text><text start="241.04" dur="5.04">debate the pros and cons of rote memorization 
however trying to learn html by just memorizing  </text><text start="246.08" dur="6.16">lists of all the html tags is not going to be very 
effective coding is an applicable skill not just a  </text><text start="252.24" dur="5.92">collection of abstract facts obviously you do need 
to be able to remember things in order to use them  </text><text start="258.16" dur="4.72">but you&amp;#39;re going to learn flexbox a lot faster 
if you explore all the different properties by  </text><text start="262.88" dur="4.96">playing around in a code pen for a day or two as 
opposed to just memorizing the definition of flex  </text><text start="267.84" dur="5.2">grow no web developer is going to know everything 
off the top of their head I can attest to this  </text><text start="273.04" dur="4.8">as someone who worked in the industry for a long 
time and worked with other professional developers  </text><text start="278.4" dur="5.12">we all used Google or DuckDuckGo if you care 
about your privacy to look up stuff constantly  </text><text start="284.16" dur="5.2">in a way Stack Overflow, MDN, and CSS Tricks 
become kind of like an extension of your brain  </text><text start="290.24" dur="4.4">the goal of all this is to be able to build 
websites and if you need to look up stuff  </text><text start="294.64" dur="5.68">along the way that&amp;#39;s perfectly fine everyone 
does it and that brings me to tip number five  </text><text start="300.32" dur="5.52">build stuff I know everyone says this but it 
really is the best way to learn coding watching  </text><text start="305.84" dur="4">tutorials and going through courses is the 
beginning not the end of learning web development  </text><text start="310.88" dur="4.72">at my first web dev job I would be given a 
project like building a landing page with a button  </text><text start="315.6" dur="5.84">and getting it to submit to a database now since 
this was my job I had to build it I didn&amp;#39;t really  </text><text start="321.44" dur="6.08">have a choice and oftentimes I&amp;#39;ll be given a task 
that I had no idea how to do scary right the only  </text><text start="327.52" dur="5.52">solution was to jump right in and try my best I 
would look stuff up and try things on my own and  </text><text start="333.04" dur="4.56">ask for help when I really was stuck even though 
the process of figuring this all out may have  </text><text start="337.6" dur="5.28">been very painful at times it was all worth it in 
the end when I got to look at my finished website  </text><text start="342.88" dur="4.64">and this is one big benefit of learning by 
building projects having a tangible goal in  </text><text start="347.52" dur="4.4">front of you is great because when you reach it 
you&amp;#39;ll feel like you&amp;#39;ve really achieved something  </text><text start="351.92" dur="5.04">if you&amp;#39;re looking for project ideas don&amp;#39;t worry 
because there are tons of them on the internet  </text><text start="356.96" dur="4.88">search for things like &amp;quot;javascript project 
ideas&amp;quot; or &amp;quot;react project ideas&amp;quot; you get  </text><text start="361.84" dur="4.96">the picture and personally I always recommend 
FrontendMentor.io for front-end projects that  </text><text start="366.8" dur="5.52">are also great additions to your portfolio I&amp;#39;ve 
built a few Frontend Mentor projects on my channel  </text><text start="372.32" dur="3.76">and if you&amp;#39;re interested you can check out 
Building a Responsive Website from Scratch  </text><text start="376.08" dur="4.48">and more recently, Building a Social 
Media Dashboard with a Dark/Light Toggle  </text><text start="381.28" dur="4.8">and if you do watch these don&amp;#39;t forget to 
code along with me as you watch anyway if  </text><text start="386.08" dur="3.76">you&amp;#39;re currently learning to code I really 
hope that this video has been helpful for you  </text><text start="390.56" dur="4.24">let me know down in the comments what you thought 
and if you have any more tips that you found  </text><text start="394.8" dur="13.127">useful feel free to share those as well so thanks 
for watching and we&amp;#39;ll see you in the next one :)</text></transcript>